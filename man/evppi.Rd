% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evppi.R
\name{evppi}
\alias{evppi}
\title{Calculate the expected value of partial perfect information from a decision model}
\usage{
evppi(outputs, inputs, poi, method = NULL, nsim = NULL,
  verbose = TRUE, ...)
}
\arguments{
\item{outputs}{This could take one of two forms

"net benefit" form: a matrix or data frame of samples from the uncertainty distribution of the expected net benefit.  The number of rows should equal the number of samples, and the number of columns should equal the number of decision options.

"cost-effectiveness analysis" form: a list with the following named components:

\code{"c"}: a matrix or data frame of samples from the distribution of costs.  There should be one column for each decision option.

\code{"e"}: a matrix or data frame of samples from the distribution of effects, likewise.

\code{"k"}: a vector of willingness-to-pay values.

Objects of class \code{"bcea"}, as created by the \pkg{BCEA} package, are in this "cost-effectiveness analysis" format, therefore they may be supplied as the \code{outputs} argument.

If \code{outputs} is a matrix or data frame it is assumed to be of "net benefit" form.  Otherwise if it is a list, it is assumed to be of "cost effectiveness analysis" form.

The exact names and formats of all these arguments is up for discussion!}

\item{inputs}{Matrix or data frame of samples from the uncertainty distribution of the input parameters of the decision model.   The number of columns should equal the number of parameters, and the columns should be named.    This should have the same number of rows as there are samples in \code{outputs}, and each row of the samples in \code{outputs} should give the model output evaluated at the corresponding parameters.}

\item{poi}{A character vector giving the parameters of interest, for which the EVPPI is required.   This should correspond to particular columns of \code{inputs}.  [ I thought about allowing numeric indices for this, but perhaps better to encourage good practice by mandating that the parameters are named ]}

\item{method}{Character string indicating the calculation method.   Only methods currently implemented are based on nonparametric regression

\code{"gam"} for a generalized additive model implemented in the gam() function from the mgcv() package.

\code{"gp"} for a Gaussian process regression TODO MORE 

\code{"inla"} for an INLA/SPDE Gaussian process regression  TODO MORE 

\code{"earth"} for a multivariate adaptive regression spline with the \pkg{earth} package  TODO MORE 

TODO earth, single par methods}

\item{nsim}{Number of simulations from the model to use for calculating EVPPI.  The first \code{nsim} rows of the objects in \code{inputs} and \code{outputs} are used.}

\item{verbose}{If \code{TRUE}, then print messages describing each step of the calculation.  Useful to see the progress of slow calculations.  Currently only supported by the \code{"inla"} EVPPI method.}

\item{...}{Other arguments to control specific methods

\code{gam_formula}: a character string giving the right hand side of the formula supplied to the gam() function, when \code{method="gam"}. By default, this is a tensor product of all the parameters of interest, e.g. if \code{poi = c("pi","rho")}, then \code{gam_formula} defaults to \code{t(pi, rho, bs="cr")}.  The option \code{bs="cr"} indicates a cubic spline regression basis, which more computationally efficient than the default "thin plate" basis.  If there are four parameters of interest, then the additional argument \code{k=4} is supplied to \code{te()}, specifying a four-dimensional basis.   [ This is the default in SAVI ]

\code{gp_hyper_n}: number of samples to use to estimate the hyperparameters in the Gaussian process regression method.  By default, this is the minimum of the following three quantities: 30 times the number of parameters of interest, 250, and the number of simulations being used for calculating EVPPI.

TODO document options to INLA method}
}
\description{
Calculate the expected value of partial perfect information from a decision model
}
