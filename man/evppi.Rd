% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evppi.R
\name{evppi}
\alias{evppi}
\title{Calculate the expected value of partial perfect information from a decision model}
\usage{
evppi(
  outputs,
  inputs,
  pars = NULL,
  method = NULL,
  nsim = NULL,
  verbose = TRUE,
  tidy = TRUE,
  ...
)
}
\arguments{
\item{outputs}{This could take one of two forms

  "net benefit" form: a matrix or data frame of samples from the uncertainty
  distribution of the expected net benefit.  The number of rows should equal
  the number of samples, and the number of columns should equal the number
  of decision options.

  "cost-effectiveness analysis" form: a list with the following named
  components:

  \code{"c"}: a matrix or data frame of samples from the distribution of
  costs.  There should be one column for each decision option.

  \code{"e"}: a matrix or data frame of samples from the distribution of
  effects, likewise.

  \code{"k"}: a vector of willingness-to-pay values.

Objects of class \code{"bcea"}, as created by the \pkg{BCEA} package, are in
this "cost-effectiveness analysis" format, therefore they may be supplied as
the \code{outputs} argument.

If \code{outputs} is a matrix or data frame it is assumed to be of "net
benefit" form.  Otherwise if it is a list, it is assumed to be of "cost
effectiveness analysis" form.}

\item{inputs}{Matrix or data frame of samples from the uncertainty
distribution of the input parameters of the decision model.   The number
of columns should equal the number of parameters, and the columns should
be named.    This should have the same number of rows as there are samples
in \code{outputs}, and each row of the samples in \code{outputs} should
give the model output evaluated at the corresponding parameters.}

\item{pars}{A character vector giving the parameters of interest, for which
  a single EVPPI calculation is required.  If the vector has multiple
  element, then the joint expected value of perfect information on all these
  parameters together is calculated.

  Alternatively, \code{pars} may be a list.  Multiple EVPPI calculations are
  then performed, one for each component of \code{pars} defined in the above
  vector form.

  \code{pars} must be specified if \code{inputs} is a matrix or data frame.
  This should then correspond to particular columns of \code{inputs}.    If
  \code{inputs} is a vector, this is assumed to define the single parameter
  of interest, then \code{pars} is not required.}

\item{method}{Character string indicating the calculation method.   The default
  methods are based on nonparametric regression:

\code{"gam"} for a generalized additive model implemented in the gam()
function from the mgcv() package.  This is the default method for
calculating the EVPPI of 4 or fewer parameters.

\code{"gp"} for a Gaussian process regression, as described by Strong et al.
(2014) and implemented in the SAVI package
(\url{http://savi.shef.ac.uk/SAVI/}).

\code{"inla"} for an INLA/SPDE Gaussian process regression method, from
Heath et al. (2016).   This is the default method for calculating the EVPPI
of more than 4 parameters.

\code{"earth"} for a multivariate adaptive regression spline with the
\pkg{earth} package (Milborrow, 2019).

\code{"so"} for the method of Strong and Oakley (2013).  Only supported
for single parameter EVPPI. 

\code{"sal"} for the method of Sadatsafavi et al. (2013).  Only supported 
for single parameter EVPPI.}

\item{nsim}{Number of simulations from the model to use for calculating
EVPPI.  The first \code{nsim} rows of the objects in \code{inputs} and
\code{outputs} are used.}

\item{verbose}{If \code{TRUE}, then print messages describing each step of
the calculation.  Useful to see the progress of slow calculations.
Currently only supported by the \code{"inla"} EVPPI method.}

\item{tidy}{Only used if \code{outputs} is in cost-effectiveness form.  Then
if \code{tidy=TRUE}, \code{\link{evppi}} returns a data frame containing a
column \code{k} for the willingness-to-pay values and a column
\code{evppi} for the EVPPIs.  Or if \code{tidy=FALSE} then the function
returns a vector of the EVPPIs at each willingess-to-pay.}

\item{...}{Other arguments to control specific methods.

  For \code{method="gam"}:
  
\code{gam_formula}: a character string giving the right hand side of the formula supplied to the \code{gam()} function. By default, this is a tensor product of all the parameters of interest, e.g. if \code{pars = c("pi","rho")}, then \code{gam_formula} defaults to \code{t(pi, rho, bs="cr")}.  The option \code{bs="cr"} indicates a cubic spline regression basis, which more computationally efficient than the default "thin plate" basis.  If there are four or more parameters of interest, then the additional argument \code{k=4} is supplied to \code{te()}, specifying a four-dimensional basis, which is currently the default in the SAVI package (\url{http://savi.shef.ac.uk/SAVI/}).

For \code{method="gp"}:

\code{gp_hyper_n}: number of samples to use to estimate the hyperparameters
in the Gaussian process regression method.  By default, this is the minimum
of the following three quantities: 30 times the number of parameters of
interest, 250, and the number of simulations being used for calculating
EVPPI.

\code{maxSample} Maximum sample size to employ for \code{method="gp"}.  Only
increase this from the default 5000 if your computer has sufficent memory to
invert square matrices with this dimension.

For \code{method="inla"}, as described in detail in Baio, Berardi and Heath
(2017):

\code{int.ord} (integer) maximum order of interaction terms to include in
the regression predictor, e.g. if \code{int.ord=k} then all k-way
interactions are used.  TODO handle effects and costs separately

 \code{cutoff} (default 0.3) controls the
density of the points inside the mesh in the spatial part of the mode. 
Acceptable values are typically in
the interval (0.1,0.5), with lower values implying more points (and thus
better approximation and greatercomputational time).

\code{convex.inner} (default = -0.4) and \code{convex.outer} (default = -0.7)
control the boundaries for the mesh. These should be negative values and can
be decreased (say to -0.7 and -1, respectively) to increase the distance
between the points and the outer boundary, which also increases precision and
computational time.

\code{robust}. if \code{TRUE} then INLA will use a t prior distribution for
the coefficients of the linear predictor, rather than the default normal.

\code{h.value} (default=0.00005) controls the accuracy of the INLA
grid-search for the estimation of the hyperparameters. Lower values imply a
more refined search (and hence better accuracy), at the expense of
computational speed.

\code{plot_inla_mesh} (default \code{FALSE}) Produce a plot of the mesh.

\code{max.edge}  Largest allowed triangle edge length when constructing the
mesh, passed to \code{\link[INLA]{inla.mesh.2d}}.

For \code{method="so"}:

\code{n.blocks} Number of blocks to split the sample into. Required.

For \code{method="sal"}:

\code{n.seps} Number of separators (default 1).}
}
\value{
If a single EVPPI calculation is being performed, when \code{pars} or
  \code{inputs} is a vector, and \code{outputs} is of "net benefit" form,
  then \code{\link{evppi}} simply returns the numeric value of the EVPPI.

  If \code{outputs} is of "cost-effectiveness analysis" form so that there is
  one EVPPI per willingness-to-pay value, then a data frame is returned with
  one column \code{k} identifying the willingness-to-pay, and another column
  \code{evppi} with the EVPPI.

  If \code{pars} is a list, so that multiple EVPPI calculations are performed
  with different parameters, then \code{\link{evppi}} also returns a data
  frame, with another column \code{pars} identifying the parameter or
  parameters.
}
\description{
Calculate the expected value of partial perfect information from a decision model
}
\references{
Strong, M., Oakley, J. E., & Brennan, A. (2014). Estimating multiparameter
partial expected value of perfect information from a probabilistic
sensitivity analysis sample: a nonparametric regression approach. Medical
Decision Making, 34(3), 311-326.

Heath, A., Manolopoulou, I., & Baio, G. (2016). Estimating the expected
value of partial perfect information in health economic evaluations using
integrated nested Laplace approximation. Statistics in medicine, 35(23),
4264-4280.

Baio, G., Berardi, A., & Heath, A. (2017). Bayesian cost-effectiveness
analysis with the R package BCEA. New York: Springer.

Milborrow, S. (2019) earth: Multivariate Adaptive Regression Splines. R
package version 5.1.2. Derived from mda:mars by Trevor Hastie and Rob
Tibshirani. Uses Alan Miller's Fortran utilities with Thomas Lumley's leaps
wrapper. https://CRAN.R-project.org/package=earth.

Strong, M., & Oakley, J. E. (2013). An efficient method for computing
single-parameter partial expected value of perfect information. Medical
Decision Making, 33(6), 755-766. Chicago

Sadatsafavi, M., Bansback, N., Zafari, Z., Najafzadeh, M., & Marra, C.
(2013). Need for speed: an efficient algorithm for calculation of
single-parameter expected value of partial perfect information. Value in
Health, 16(2), 438-448.
}
